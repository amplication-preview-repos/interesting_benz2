/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmailConfig as PrismaEmailConfig } from "@prisma/client";

export class EmailConfigServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailConfigCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailConfig.count(args);
  }

  async emailConfigs<T extends Prisma.EmailConfigFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailConfigFindManyArgs>
  ): Promise<PrismaEmailConfig[]> {
    return this.prisma.emailConfig.findMany<Prisma.EmailConfigFindManyArgs>(
      args
    );
  }
  async emailConfig<T extends Prisma.EmailConfigFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailConfigFindUniqueArgs>
  ): Promise<PrismaEmailConfig | null> {
    return this.prisma.emailConfig.findUnique(args);
  }
  async createEmailConfig<T extends Prisma.EmailConfigCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailConfigCreateArgs>
  ): Promise<PrismaEmailConfig> {
    return this.prisma.emailConfig.create<T>(args);
  }
  async updateEmailConfig<T extends Prisma.EmailConfigUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailConfigUpdateArgs>
  ): Promise<PrismaEmailConfig> {
    return this.prisma.emailConfig.update<T>(args);
  }
  async deleteEmailConfig<T extends Prisma.EmailConfigDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailConfigDeleteArgs>
  ): Promise<PrismaEmailConfig> {
    return this.prisma.emailConfig.delete(args);
  }
}
